generator client {
  provider = "prisma-kysely"
  output   = "../src/db"
  fileName = "types.ts"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model accounts {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamp(3)
  updated_at DateTime  @default(now()) @db.Timestamp(3)
  deleted_at DateTime?
  email      String    @unique
  username   String?   @unique
  password   String

  // Password Reset Fields
  reset_code          String?   @db.VarChar(6)
  reset_code_expires  DateTime? @db.Timestamp(3)
  reset_attempts      Int       @default(0)
  reset_blocked_until DateTime? @db.Timestamp(3)

  // Relations
  sessions sessions[]
  user     users?

  // Indexes
  @@index([created_at])
  @@index([updated_at])
  @@index([deleted_at])
  @@index([email])
}

model sessions {
  id            Int       @id @default(autoincrement())
  created_at    DateTime  @default(now()) @db.Timestamp(3)
  updated_at    DateTime  @default(now()) @db.Timestamp(3)
  deleted_at    DateTime?
  refresh_token String    @unique @db.VarChar(512)

  // Foreign Keys
  account_id Int?

  // Relations
  account accounts? @relation(fields: [account_id], references: [id])

  // Indexes
  @@index([created_at])
  @@index([updated_at])
  @@index([deleted_at])
  @@index([account_id])
}

model users {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamp(3)
  updated_at DateTime  @default(now()) @db.Timestamp(3)
  deleted_at DateTime?
  first_name String?
  last_name  String?

  // Foreign Keys
  account_id Int? @unique

  // Relations
  account accounts? @relation(fields: [account_id], references: [id], onDelete: Cascade)

  // Indexes
  @@index([created_at])
  @@index([updated_at])
  @@index([deleted_at])
  @@index([first_name])
  @@index([last_name])
}
